<Page x:Class="ArendatorTOP.Pages.ObjectRents"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ArendatorTOP.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="700" d:DesignWidth="1200"
      Title="ObjectRent"
      xmlns:viewModel="clr-namespace:ArendatorTOP.ViewModel">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resource/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <Page.DataContext>
        <viewModel:ObjectRentViewModel>
        </viewModel:ObjectRentViewModel>
    </Page.DataContext>
    <Grid Style="{DynamicResource MainBack}">
        <Grid.RowDefinitions>
            <RowDefinition Height="109"/>
            <RowDefinition Height="20"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" Width="1100">
            <StackPanel Orientation="Horizontal" Margin="20,0,0,0" HorizontalAlignment="Left">
                <Button x:Name="btnFiltration" Height="24" Margin="5,0,0,0" Background="Transparent" BorderThickness="0" Click="btnFiltration_Click">
                    <Button.Content>
                        <Image Source="\Resource\Images\Filter.png"/>
                    </Button.Content>
                </Button>
            </StackPanel>
            <StackPanel x:Name="StakPanelFilter" Grid.Row="0" Orientation="Horizontal" Width="0">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ObjectRents},Path=IsShowFilter}" Value="False">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="_bS2">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" From="0" To="1000" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="_bS2"></RemoveStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:ObjectRents},Path=IsShowFilter}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="_bS1">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Width" From="1000" To="0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <RemoveStoryboard BeginStoryboardName="_bS1"></RemoveStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <StackPanel  Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock Text="Назначение" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,10"/>
                    <ComboBox ItemsSource="{Binding SelectionFiltersApp}" Style="{DynamicResource myComboBoxStyle}" x:Name="comboType" Width="150" Height="24" Margin="10,0,0,0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox  IsChecked="{Binding IsChecked}" Content="{Binding Appointments.Title}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel  Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock Text="Стоимость" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,10"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="От" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBox x:Name="textStartPrice" Text="{Binding StartPrice, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource RadiusText}" Width="50" Margin="5,0,0,0" Height="24" TextChanged="textStartPrice_TextChanged"/>
                        <TextBlock Text="До" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBox x:Name="textEndPrice" Style="{DynamicResource RadiusText}" Text="{Binding EndPrice, UpdateSourceTrigger=PropertyChanged}" Width="50" Margin="5,0,0,0" TextChanged="textEndPrice_TextChanged"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel  Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock Text="Площадь" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,10"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="От" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding StartSquare, UpdateSourceTrigger=PropertyChanged}" x:Name="textStartSquare" Style="{DynamicResource RadiusText}" Width="50" Margin="5,0,0,0" Height="24" TextChanged="textStartSquare_TextChanged"/>
                        <TextBlock Text="До" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding EndSquare, UpdateSourceTrigger=PropertyChanged}" x:Name="textEndSquare" Style="{DynamicResource RadiusText}" Width="50" Margin="5,0,0,0" TextChanged="textEndSquare_TextChanged"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0">
                    <TextBlock Text="Этаж"/>
                    <ComboBox Style="{DynamicResource myComboBoxStyle}" Height="23" Margin="0,10,0,0" Width="30" ItemsSource="{Binding SelectionFiltersFloor}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox x:Name="chekFloor" Content="{Binding Floor.floor}" IsChecked="{Binding IsChecked}" Unchecked="chekFloor_Unchecked" Checked="chekFloor_Checked"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Vertical" VerticalAlignment="Center" Width="120" Margin="20,0,0,0" HorizontalAlignment="Center">
                    <TextBlock Text="Состояние" Margin="0,0,0,10"/>
                    <Expander>
                        <ListBox SelectionMode="Extended" ItemsSource="{Binding SelectionFiltersState, Mode=OneWay}" Background="Transparent">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding Statements.Title}" IsChecked="{Binding IsChecked}" x:Name="chekBoxStaytment" Unchecked="chekBoxStaytment_Unchecked" Checked="chekBoxStaytment_Checked"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Expander>
                </StackPanel>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Сортировка:"/>
                    <ComboBox SelectedIndex="{Binding selectedSortIndex}" x:Name="sortBox" Width="200" Margin="0,10,0,0" SelectionChanged="sortBox_SelectionChanged">
                        <ComboBoxItem Content="Сортировать по цене:(по возрастанию)"/>
                        <ComboBoxItem Content="Сортировать по цене:(по убыванию)"/>
                        <ComboBoxItem Content="Сортировать по площади:(по возрастанию)"/>
                        <ComboBoxItem Content="Сортировать по площади:(по убыванию)"/>
                    </ComboBox>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Height="20" Width="82">
            <TextBlock Text="{Binding Title}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16"/>
        </StackPanel>
        <Border Grid.Row="2" CornerRadius="10">
            <ListView SelectionMode="Multiple" ItemContainerStyle="{DynamicResource listViewItemStyle}" x:Name="listObjectRent" ItemsSource="{Binding ObjectRents}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Center" d:ItemsSource="{d:SampleData ItemCount=5}">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="380" Height="520">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="290">
                                </RowDefinition>
                                <RowDefinition Height="30">
                                </RowDefinition>
                                <RowDefinition Height="30">
                                </RowDefinition>
                                <RowDefinition Height="30">
                                </RowDefinition>
                                <RowDefinition Height="30">
                                </RowDefinition>
                                <RowDefinition Height="30">
                                </RowDefinition>
                                <RowDefinition Height="40">
                                </RowDefinition>
                                <RowDefinition Height="40">
                                </RowDefinition>
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,5,5,0">
                                <Button Width="15" Height="15" Margin="0,0,5,0" Background="Transparent" BorderThickness="0" BorderBrush="Transparent">
                                    <Button.Content>
                                        <Image Source="\Resource\Images\Edit.png"/>
                                    </Button.Content>
                                </Button>
                                <Button Width="15" Height="15" Background="Transparent" x:Name="btnDelete" BorderThickness="0" BorderBrush="Transparent" Click="btnDelete_Click">
                                    <Button.Content>
                                        <Image Source="\Resource\Images\DELETE.png"/>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" Width="380" Height="280" Margin="5,20,5,5" >
                                <!--Область отображения изображений-->
                                <ListBox x:Name="test" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Padding="0" ScrollViewer.VerticalScrollBarVisibility="Hidden" BorderThickness="0" HorizontalContentAlignment="Stretch" ItemsSource="{Binding PhotoOR}" SelectedIndex="0" Width="380" Height="250" MouseMove="test_MouseMove" MouseLeave="test_MouseLeave" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid></Grid>
                                            <!--В качестве контейнера элементов будет выступать grid. Тогда все элементы будут накладываться друг на друга-->
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Image Stretch="Fill" Source="{Binding Path, Converter={StaticResource relativToFullPathConverter}}"></Image>
                                            <!--В качесте шаблона элементов будет выступать изображение-->
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <!--Задаем стиль для элементов внутри listBox: убираем отступы, границы и фокусировку, чтобы нельзя было выбирать элементы -->
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Focusable" Value="False"></Setter>
                                            <Setter Property="Padding" Value="0"></Setter>
                                            <Setter Property="BorderThickness" Value="0"></Setter>
                                            <Style.Triggers>
                                                <!--Задаем триггер, который будет отображать поверх других элементов "выделенный" элемент (выделять элемент будем программно)-->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Panel.ZIndex" Value="10000"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                                <!--Область отображения кружочков-->
                                <ListBox SelectedIndex="{Binding ElementName=test, Path=SelectedIndex}" BorderThickness="0" ItemsSource="{Binding PhotoOR}" Width="auto" Height="12">
                                    <!--Значение SelectedIndex будем брать у ListBox с изображениями.-->
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"></StackPanel>
                                            <!--В качестве контейнера установим StackPanel в горизонтальной орентации.-->
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Ellipse Margin="1,0" Width="7" Height="7" Fill="#B3BCC5"></Ellipse>
                                            <!--Элементом ListBox будет служить круг серого цвета-->
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Focusable" Value="False"></Setter>
                                            <Setter Property="Padding" Value="0"></Setter>
                                            <Setter Property="BorderThickness" Value="0"></Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <!--Если элемент выделен, то меняем серый кружок на синий-->
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Ellipse Margin="1,0" Width="7" Height="7" Fill="#005BFF"></Ellipse>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </StackPanel>
                            <TextBlock Grid.Row="1" Text="{Binding Appointment.Title, StringFormat=Назначение: {0}}" FontSize="16" Margin="5,0,0,0"/>
                            <TextBlock Grid.Row="2" Text="{Binding Square, StringFormat=Площадь: {0}}" FontSize="16" Margin="5,0,0,0"/>
                            <TextBlock Grid.Row="3" Text="{Binding PriceForOneMeter, StringFormat=Стоимость за кв.метр: {0} руб.}" FontSize="16" Margin="5,0,0,0"/>
                            <TextBlock Grid.Row="4" Text="{Binding Floor, StringFormat=Этаж: {0}}" FontSize="16" Margin="5,0,0,0"/>
                            <TextBlock Grid.Row="5" Text="{Binding Statement.Title, StringFormat=Состояние: {0}}" FontSize="16" Margin="5,0,0,0"/>
                            <Button Grid.Row="6" x:Name="btnDetail" Content="Подробнее" FontSize="16" Style="{DynamicResource Button}" Width="180" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Button Grid.Row="7" x:Name="btnSheme" Content="Посмотреть на схеме" FontSize="16" Style="{DynamicResource Button}" Width="180" Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Border>
    </Grid>
</Page>
