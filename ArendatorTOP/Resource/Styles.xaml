<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:ArendatorTOP.Converters"
                    xmlns:viewModel="clr-namespace:ArendatorTOP.ViewModel">
    <converters:RelativeToFullPathConverter x:Key="relativToFullPathConverter">
    </converters:RelativeToFullPathConverter>
    <converters:GetAddressesConverter x:Key="getAddressConverter">
    </converters:GetAddressesConverter>
    <viewModel:AddClientViewModel x:Key="viewModelAddClient"/>
    <Style x:Key="Header">
        <Setter Property="Control.Background" Value="#FBEBEB"/>
    </Style>
    <Style x:Key="MainBack">
        <Setter Property="ItemsControl.Background" Value="#FBEBEB"/>
        <Setter Property="Control.FontFamily" Value="Corbel"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="FontFamily" Value="Corbel"/>
        <Setter Property="Background" Value="#FBEBEB"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="#FBEBEB"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="PanelAuto">
        <Setter Property="Control.Background" Value="#B2463F3F"/>
        <Setter Property="Control.FontFamily" Value="Corbel"/>
        <Setter Property="Control.Foreground" Value="White"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="20"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="#B2463F3F"/>
    </Style>

    <Style TargetType="DataGridCell">
        <Style.Setters>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

    <Style x:Key="BacgroundForListViewItem">
    </Style>

    <Style x:Key="listViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Margin="10">
                        <Border x:Name="_border" Background="White" CornerRadius="3" BorderBrush="#B2463F3F" BorderThickness="1"/>
                        <ContentPresenter>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="_border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="15" Opacity="0.5" Direction="-90" RenderingBias="Performance" ShadowDepth="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border Height="40" Background="#B2463F3F">
                        <TextBlock VerticalAlignment="Center" Foreground="White" TextAlignment="Center" FontWeight="Bold">
                            <ContentPresenter></ContentPresenter>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadiusText">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="myComboBoxStyle" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton  
            Name="ToggleButton"
            Grid.Column="2"  
            Focusable="false" 
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" 
            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter 
            Name="ContentSite" 
            IsHitTestVisible="False"  
            Content="{TemplateBinding SelectionBoxItem}" 
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
            Margin="3,3,23,3" 
            VerticalAlignment="Center" 
            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" 
            Style="{x:Null}"
            HorizontalAlignment="Left"  
            VerticalAlignment="Center"  
            Margin="3,3,23,3" 
            Focusable="True"
            Foreground="White"
            Background="Transparent" 
            Visibility="Hidden" 
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup  
            Name="Popup" 
            Placement="Bottom" 
            IsOpen="{TemplateBinding IsDropDownOpen}" 
            AllowsTransparency="True"  
            Focusable="False" 
            PopupAnimation="Slide">
                            <Grid  
              Name="DropDown" 
              SnapsToDevicePixels="True"                 
              MinWidth="{TemplateBinding ActualWidth}" 
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border  
                x:Name="DropDownBorder" 
                Background="#B2463F3F" 
                BorderThickness="1" 
                BorderBrush="#C67803"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#C67803"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="Button" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderButton" Background="#463F3F" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="#C67803"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDelete" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderButton" Background="Transparent" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="#FF0000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button2" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderButton" Background="#463F3F" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="#CEBD22"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button3" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderButton" Background="#463F3F" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="#ADFF00"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button4" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="borderButton" Background="#463F3F" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="#FF0000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="borderButton" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>